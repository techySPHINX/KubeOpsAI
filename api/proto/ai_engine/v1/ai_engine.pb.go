// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ai_engine/v1/ai_engine.proto

package ai_enginev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanRequest) Reset() {
	*x = PlanRequest{}
	mi := &file_ai_engine_v1_ai_engine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanRequest) ProtoMessage() {}

func (x *PlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_engine_v1_ai_engine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanRequest.ProtoReflect.Descriptor instead.
func (*PlanRequest) Descriptor() ([]byte, []int) {
	return file_ai_engine_v1_ai_engine_proto_rawDescGZIP(), []int{0}
}

func (x *PlanRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type PlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *PipelinePlan          `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanResponse) Reset() {
	*x = PlanResponse{}
	mi := &file_ai_engine_v1_ai_engine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanResponse) ProtoMessage() {}

func (x *PlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_engine_v1_ai_engine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanResponse.ProtoReflect.Descriptor instead.
func (*PlanResponse) Descriptor() ([]byte, []int) {
	return file_ai_engine_v1_ai_engine_proto_rawDescGZIP(), []int{1}
}

func (x *PlanResponse) GetPlan() *PipelinePlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

var File_ai_engine_v1_ai_engine_proto protoreflect.FileDescriptor

const file_ai_engine_v1_ai_engine_proto_rawDesc = "" +
	"\n" +
	"\x1cai_engine/v1/ai_engine.proto\x12\fai_engine.v1\x1a\x1bai_engine/v1/pipeline.proto\"#\n" +
	"\vPlanRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\">\n" +
	"\fPlanResponse\x12.\n" +
	"\x04plan\x18\x01 \x01(\v2\x1a.ai_engine.v1.PipelinePlanR\x04plan2R\n" +
	"\x0fAIEngineService\x12?\n" +
	"\x04Plan\x12\x19.ai_engine.v1.PlanRequest\x1a\x1a.ai_engine.v1.PlanResponse\"\x00B.Z,neuralops/api/proto/ai_engine/v1;ai_enginev1b\x06proto3"

var (
	file_ai_engine_v1_ai_engine_proto_rawDescOnce sync.Once
	file_ai_engine_v1_ai_engine_proto_rawDescData []byte
)

func file_ai_engine_v1_ai_engine_proto_rawDescGZIP() []byte {
	file_ai_engine_v1_ai_engine_proto_rawDescOnce.Do(func() {
		file_ai_engine_v1_ai_engine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_engine_v1_ai_engine_proto_rawDesc), len(file_ai_engine_v1_ai_engine_proto_rawDesc)))
	})
	return file_ai_engine_v1_ai_engine_proto_rawDescData
}

var file_ai_engine_v1_ai_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ai_engine_v1_ai_engine_proto_goTypes = []any{
	(*PlanRequest)(nil),  // 0: ai_engine.v1.PlanRequest
	(*PlanResponse)(nil), // 1: ai_engine.v1.PlanResponse
	(*PipelinePlan)(nil), // 2: ai_engine.v1.PipelinePlan
}
var file_ai_engine_v1_ai_engine_proto_depIdxs = []int32{
	2, // 0: ai_engine.v1.PlanResponse.plan:type_name -> ai_engine.v1.PipelinePlan
	0, // 1: ai_engine.v1.AIEngineService.Plan:input_type -> ai_engine.v1.PlanRequest
	1, // 2: ai_engine.v1.AIEngineService.Plan:output_type -> ai_engine.v1.PlanResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ai_engine_v1_ai_engine_proto_init() }
func file_ai_engine_v1_ai_engine_proto_init() {
	if File_ai_engine_v1_ai_engine_proto != nil {
		return
	}
	file_ai_engine_v1_pipeline_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_engine_v1_ai_engine_proto_rawDesc), len(file_ai_engine_v1_ai_engine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_engine_v1_ai_engine_proto_goTypes,
		DependencyIndexes: file_ai_engine_v1_ai_engine_proto_depIdxs,
		MessageInfos:      file_ai_engine_v1_ai_engine_proto_msgTypes,
	}.Build()
	File_ai_engine_v1_ai_engine_proto = out.File
	file_ai_engine_v1_ai_engine_proto_goTypes = nil
	file_ai_engine_v1_ai_engine_proto_depIdxs = nil
}
