// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ai_engine/v1/pipeline.proto

package ai_enginev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PipelinePlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tasks         []*Task                `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelinePlan) Reset() {
	*x = PipelinePlan{}
	mi := &file_ai_engine_v1_pipeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelinePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelinePlan) ProtoMessage() {}

func (x *PipelinePlan) ProtoReflect() protoreflect.Message {
	mi := &file_ai_engine_v1_pipeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelinePlan.ProtoReflect.Descriptor instead.
func (*PipelinePlan) Descriptor() ([]byte, []int) {
	return file_ai_engine_v1_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *PipelinePlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PipelinePlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelinePlan) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	DependsOn     []string               `protobuf:"bytes,4,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`
	Config        map[string]string      `protobuf:"bytes,5,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_ai_engine_v1_pipeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_ai_engine_v1_pipeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_ai_engine_v1_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetDependsOn() []string {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *Task) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_ai_engine_v1_pipeline_proto protoreflect.FileDescriptor

const file_ai_engine_v1_pipeline_proto_rawDesc = "" +
	"\n" +
	"\x1bai_engine/v1/pipeline.proto\x12\fai_engine.v1\"j\n" +
	"\fPipelinePlan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12(\n" +
	"\x05tasks\x18\x03 \x03(\v2\x12.ai_engine.v1.TaskR\x05tasks\"\xe2\x01\n" +
	"\x04Task\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"depends_on\x18\x04 \x03(\tR\tdependsOn\x126\n" +
	"\x06config\x18\x05 \x03(\v2\x1e.ai_engine.v1.Task.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B.Z,neuralops/api/proto/ai_engine/v1;ai_enginev1b\x06proto3"

var (
	file_ai_engine_v1_pipeline_proto_rawDescOnce sync.Once
	file_ai_engine_v1_pipeline_proto_rawDescData []byte
)

func file_ai_engine_v1_pipeline_proto_rawDescGZIP() []byte {
	file_ai_engine_v1_pipeline_proto_rawDescOnce.Do(func() {
		file_ai_engine_v1_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_engine_v1_pipeline_proto_rawDesc), len(file_ai_engine_v1_pipeline_proto_rawDesc)))
	})
	return file_ai_engine_v1_pipeline_proto_rawDescData
}

var file_ai_engine_v1_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ai_engine_v1_pipeline_proto_goTypes = []any{
	(*PipelinePlan)(nil), // 0: ai_engine.v1.PipelinePlan
	(*Task)(nil),         // 1: ai_engine.v1.Task
	nil,                  // 2: ai_engine.v1.Task.ConfigEntry
}
var file_ai_engine_v1_pipeline_proto_depIdxs = []int32{
	1, // 0: ai_engine.v1.PipelinePlan.tasks:type_name -> ai_engine.v1.Task
	2, // 1: ai_engine.v1.Task.config:type_name -> ai_engine.v1.Task.ConfigEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ai_engine_v1_pipeline_proto_init() }
func file_ai_engine_v1_pipeline_proto_init() {
	if File_ai_engine_v1_pipeline_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_engine_v1_pipeline_proto_rawDesc), len(file_ai_engine_v1_pipeline_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ai_engine_v1_pipeline_proto_goTypes,
		DependencyIndexes: file_ai_engine_v1_pipeline_proto_depIdxs,
		MessageInfos:      file_ai_engine_v1_pipeline_proto_msgTypes,
	}.Build()
	File_ai_engine_v1_pipeline_proto = out.File
	file_ai_engine_v1_pipeline_proto_goTypes = nil
	file_ai_engine_v1_pipeline_proto_depIdxs = nil
}
