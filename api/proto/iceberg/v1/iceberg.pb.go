// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: iceberg/v1/iceberg.proto

package icebergv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"` // Schema definition would go here
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_iceberg_v1_iceberg_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type CreateTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_iceberg_v1_iceberg_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTableResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AppendToTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	DataPath      string                 `protobuf:"bytes,2,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"` // Path to data in MinIO
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendToTableRequest) Reset() {
	*x = AppendToTableRequest{}
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendToTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendToTableRequest) ProtoMessage() {}

func (x *AppendToTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendToTableRequest.ProtoReflect.Descriptor instead.
func (*AppendToTableRequest) Descriptor() ([]byte, []int) {
	return file_iceberg_v1_iceberg_proto_rawDescGZIP(), []int{2}
}

func (x *AppendToTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AppendToTableRequest) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

type AppendToTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendToTableResponse) Reset() {
	*x = AppendToTableResponse{}
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendToTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendToTableResponse) ProtoMessage() {}

func (x *AppendToTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendToTableResponse.ProtoReflect.Descriptor instead.
func (*AppendToTableResponse) Descriptor() ([]byte, []int) {
	return file_iceberg_v1_iceberg_proto_rawDescGZIP(), []int{3}
}

func (x *AppendToTableResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type OptimizeTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableName     string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptimizeTableRequest) Reset() {
	*x = OptimizeTableRequest{}
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeTableRequest) ProtoMessage() {}

func (x *OptimizeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeTableRequest.ProtoReflect.Descriptor instead.
func (*OptimizeTableRequest) Descriptor() ([]byte, []int) {
	return file_iceberg_v1_iceberg_proto_rawDescGZIP(), []int{4}
}

func (x *OptimizeTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type OptimizeTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptimizeTableResponse) Reset() {
	*x = OptimizeTableResponse{}
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizeTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeTableResponse) ProtoMessage() {}

func (x *OptimizeTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iceberg_v1_iceberg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeTableResponse.ProtoReflect.Descriptor instead.
func (*OptimizeTableResponse) Descriptor() ([]byte, []int) {
	return file_iceberg_v1_iceberg_proto_rawDescGZIP(), []int{5}
}

func (x *OptimizeTableResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_iceberg_v1_iceberg_proto protoreflect.FileDescriptor

const file_iceberg_v1_iceberg_proto_rawDesc = "" +
	"\n" +
	"\x18iceberg/v1/iceberg.proto\x12\n" +
	"iceberg.v1\"3\n" +
	"\x12CreateTableRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\"/\n" +
	"\x13CreateTableResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"R\n" +
	"\x14AppendToTableRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12\x1b\n" +
	"\tdata_path\x18\x02 \x01(\tR\bdataPath\"1\n" +
	"\x15AppendToTableResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"5\n" +
	"\x14OptimizeTableRequest\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\"1\n" +
	"\x15OptimizeTableResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x92\x02\n" +
	"\x0eIcebergService\x12P\n" +
	"\vCreateTable\x12\x1e.iceberg.v1.CreateTableRequest\x1a\x1f.iceberg.v1.CreateTableResponse\"\x00\x12V\n" +
	"\rAppendToTable\x12 .iceberg.v1.AppendToTableRequest\x1a!.iceberg.v1.AppendToTableResponse\"\x00\x12V\n" +
	"\rOptimizeTable\x12 .iceberg.v1.OptimizeTableRequest\x1a!.iceberg.v1.OptimizeTableResponse\"\x00B*Z(neuralops/api/proto/iceberg/v1;icebergv1b\x06proto3"

var (
	file_iceberg_v1_iceberg_proto_rawDescOnce sync.Once
	file_iceberg_v1_iceberg_proto_rawDescData []byte
)

func file_iceberg_v1_iceberg_proto_rawDescGZIP() []byte {
	file_iceberg_v1_iceberg_proto_rawDescOnce.Do(func() {
		file_iceberg_v1_iceberg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_iceberg_v1_iceberg_proto_rawDesc), len(file_iceberg_v1_iceberg_proto_rawDesc)))
	})
	return file_iceberg_v1_iceberg_proto_rawDescData
}

var file_iceberg_v1_iceberg_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_iceberg_v1_iceberg_proto_goTypes = []any{
	(*CreateTableRequest)(nil),    // 0: iceberg.v1.CreateTableRequest
	(*CreateTableResponse)(nil),   // 1: iceberg.v1.CreateTableResponse
	(*AppendToTableRequest)(nil),  // 2: iceberg.v1.AppendToTableRequest
	(*AppendToTableResponse)(nil), // 3: iceberg.v1.AppendToTableResponse
	(*OptimizeTableRequest)(nil),  // 4: iceberg.v1.OptimizeTableRequest
	(*OptimizeTableResponse)(nil), // 5: iceberg.v1.OptimizeTableResponse
}
var file_iceberg_v1_iceberg_proto_depIdxs = []int32{
	0, // 0: iceberg.v1.IcebergService.CreateTable:input_type -> iceberg.v1.CreateTableRequest
	2, // 1: iceberg.v1.IcebergService.AppendToTable:input_type -> iceberg.v1.AppendToTableRequest
	4, // 2: iceberg.v1.IcebergService.OptimizeTable:input_type -> iceberg.v1.OptimizeTableRequest
	1, // 3: iceberg.v1.IcebergService.CreateTable:output_type -> iceberg.v1.CreateTableResponse
	3, // 4: iceberg.v1.IcebergService.AppendToTable:output_type -> iceberg.v1.AppendToTableResponse
	5, // 5: iceberg.v1.IcebergService.OptimizeTable:output_type -> iceberg.v1.OptimizeTableResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_iceberg_v1_iceberg_proto_init() }
func file_iceberg_v1_iceberg_proto_init() {
	if File_iceberg_v1_iceberg_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_iceberg_v1_iceberg_proto_rawDesc), len(file_iceberg_v1_iceberg_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iceberg_v1_iceberg_proto_goTypes,
		DependencyIndexes: file_iceberg_v1_iceberg_proto_depIdxs,
		MessageInfos:      file_iceberg_v1_iceberg_proto_msgTypes,
	}.Build()
	File_iceberg_v1_iceberg_proto = out.File
	file_iceberg_v1_iceberg_proto_goTypes = nil
	file_iceberg_v1_iceberg_proto_depIdxs = nil
}
